{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","alert","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAuCeA,EApCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAqBrC,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,KAEdO,MAAM,wBAMV,SACI,uBACIC,KAAK,OACLC,MAAOV,EACPW,SAtBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGjC,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCLHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEZf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAsBtC,OAfAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEnBC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAIR,CAACpB,IAEGqB,EDnBqBM,CAAa3B,GAAhCa,EAH0B,EAGhCN,KAAca,EAHkB,EAGlBA,QAGjB,OACI,qCACA,6BAAKpB,IAELoB,GAAW,2CAEX,qBAAKJ,UAAU,YAAf,SACI,6BAEQH,EAAOJ,KAAK,SAAAC,GACR,OAAO,cAAC,EAAD,eAEHA,GADCA,EAAIC,eEclBiB,EA9BM,WAAO,IAAD,EAGa3C,mBAAS,CAAC,iBAHvB,mBAGhB4C,EAHgB,KAGJ7C,EAHI,KAUvB,OACI,gCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI6C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCnBzB8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.41525372.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n        \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('')\r\n        }else{\r\n            alert('Debes Escribir algo')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=QuWMoLzxnCNWEM5QTp1i600SE2AdiJbN`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    })\r\n\r\n    return gifs;\r\n\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n    \r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\nconst {data: images, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n       {loading && <p>Loading...</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            <ol>\r\n                {\r\n                    images.map( img => {\r\n                        return <GifGridItem  \r\n                        key={img.id}\r\n                        {...img}\r\n                        />\r\n                    })\r\n                }\r\n            </ol>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category).then(imgs => {\r\n\r\n            setTimeout(() => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })      \r\n            }, 2000);\r\n\r\n          })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['Rick & Morty']);\r\n\r\n//    const handleAdd = () => {\r\n//\r\n//        setCategories([...categories, 'X Files']);\r\n//    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp </h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                categories.map(category => (\r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category} \r\n                    />\r\n                ))\r\n               }\r\n            </ol>\r\n        </div>                  \r\n    );\r\n}\r\n                \r\nexport default GifExpertApp;                             ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}